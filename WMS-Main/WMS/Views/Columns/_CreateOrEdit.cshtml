@model WareHouseMVC.Models.Column
@* This partial view defines form fields that will appear when creating and editing entities *@



<script type="text/javascript">
    jQuery(function ($) {
        $("select#WarehouseID").change(function (evt) {

            if ($("select#WarehouseID").val() != "-1") {

                $.ajax({
                    url:"@Url.Content("~/zones/GetFloors")",
                    type: 'POST',
                    data: { WarehouseID: $("select#WarehouseID").val() },
                    success: function (response) {
                        $("select#FloorID").replaceWith(response)


                        $("select#FloorID").change(function (evt) {

                            if ($("select#FloorID").val() != "-1") {

                                $.ajax({
                                    url: "@Url.Content("~/zones/GetZones")",
                                    type: 'POST',
                                    data: { FloorID: $("select#FloorID").val() },
                                    success: function (response) {
                                        $("select#ZoneID").replaceWith(response)


                                        $("select#ZoneID").change(function (evt) {

                                            if ($("select#ZoneID").val() != "-1") {

                                                $.ajax({
                                                    url: "@Url.Content("~/zones/GetTrains")",
                                                    type: 'POST',
                                                    data: { ZoneID: $("select#ZoneID").val() },
                                                    success: function (response) {
                                                        $("select#TrainID").replaceWith(response)



                                                        $("select#TrainID").change(function (evt) {

                                                            if ($("select#TrainID").val() != "-1") {

                                                                $.ajax({
                                                                    url:"@Url.Content("~/zones/GetRacks")",
                                                                    type: 'POST',
                                                                    data: { TrainID: $("select#TrainID").val() },
                                                                    success: function (response) {
                                                                        $("select#RackID").replaceWith(response)


                                                                        $("select#RackID").change(function (evt) {

                                                                            if ($("select#RackID").val() != "-1") {

                                                                                $.ajax({
                                                                                    url: "@Url.Content("~/zones/GetLevels")",
                                                                                    type: 'POST',
                                                                                    data: { RackID: $("select#RackID").val() },
                                                                                    success: function (response) {
                                                                                        $("select#LevelID").replaceWith(response)



                                                                                        $("select#LevelID").change(function (evt) {

                                                                                            if ($("select#LevelID").val() != "-1") {

                                                                                                $.ajax({
                                                                                                    url: "@Url.Content("~/zones/GetHeights")",
                                                                                                    type: 'POST',
                                                                                                    data: { LevelID: $("select#LevelID").val() },
                                                                                                    success: function (response) {
                                                                                                        $("select#HeightID").replaceWith(response)
                                                                                                    },
                                                                                                    error: function (xhr) {
                                                                                                        alert("Something went wrong, please try again");
                                                                                                    }
                                                                                                });
                                                                                            }
                                                                                        });






                                                                                    },
                                                                                    error: function (xhr) {
                                                                                        alert("Something went wrong, please try again");
                                                                                    }
                                                                                });
                                                                            }
                                                                        });



                                                                    },
                                                                    error: function (xhr) {
                                                                        alert("Something went wrong, please try again");
                                                                    }
                                                                });
                                                            }
                                                        });





                                                    },
                                                    error: function (xhr) {
                                                        alert("Something went wrong, please try again");
                                                    }
                                                });
                                            }
                                        });


                                    },
                                    error: function (xhr) {
                                        alert("Something went wrong, please try again");
                                    }
                                });
                            }
                        });


                    },
                    error: function (xhr) {
                        alert("Something went wrong, please try again");
                    }
                });
            }
        });



    });



</script>




<table class="table table-bordered table-invoice">
    <tbody>
    <tr>
            <td class="width30">
                Warehouse
            </td>
            <td class="width70">
                @Html.DropDownListFor(model => model.WarehouseID, ((IEnumerable<WareHouseMVC.Models.Warehouse>)ViewBag.PossibleWarehouses).Select(option => new SelectListItem
           {
               Text = Html.DisplayTextFor(_ => option.WarehouseName).ToString(),
               Value = option.WarehouseID.ToString(),
               Selected = (Model != null) && (option.WarehouseID == Model.WarehouseID) || (Model == null) && (option.WarehouseID == ViewBag.wHID)
           }), "Choose...")
                @Html.ValidationMessageFor(model => model.WarehouseID)
            </td>
        </tr>
        <tr>
            <td class="width30">
                Floor
            </td>
            <td class="width70">
                @Html.DropDownListFor(model => model.FloorID, ((IEnumerable<WareHouseMVC.Models.Floor>)ViewBag.PossibleFloors).Select(option => new SelectListItem
           {
               Text = Html.DisplayTextFor(_ => option.FloorName).ToString(),
               Value = option.FloorID.ToString(),
               Selected = (Model != null) && (option.FloorID == Model.FloorID) || (Model == null) && (option.FloorID == ViewBag.fLID)
           }), "Choose...")
                @Html.ValidationMessageFor(model => model.FloorID)
            </td>
        </tr>
        <tr>
            <td class="width30">
                Zone
            </td>
            <td class="width70">
                @Html.DropDownListFor(model => model.ZoneID, ((IEnumerable<WareHouseMVC.Models.Zone>)ViewBag.PossibleZones).Select(option => new SelectListItem
           {
               Text = Html.DisplayTextFor(_ => option.ZoneName).ToString(),
               Value = option.ZoneID.ToString(),
               Selected = (Model != null) && (option.ZoneID == Model.ZoneID) || (Model == null) && (option.ZoneID == ViewBag.zNID)
           }), "Choose...")
                @Html.ValidationMessageFor(model => model.ZoneID)
            </td>
        </tr>
        <tr>
            <td class="width30">
                Train
            </td>
            <td class="width70">
                @Html.DropDownListFor(model => model.TrainID, ((IEnumerable<WareHouseMVC.Models.Train>)ViewBag.PossibleTrains).Select(option => new SelectListItem
           {
               Text = Html.DisplayTextFor(_ => option.TrainName).ToString(),
               Value = option.TrainID.ToString(),
               Selected = (Model != null) && (option.TrainID == Model.TrainID) || (Model == null) && (option.TrainID == ViewBag.tRID)
           }), "Choose...")
                @Html.ValidationMessageFor(model => model.TrainID)
            </td>
        </tr>
        <tr>
            <td class="width30">
                Rack
            </td>
            <td class="width70">
                @Html.DropDownListFor(model => model.RackID, ((IEnumerable<WareHouseMVC.Models.Rack>)ViewBag.PossibleRacks).Select(option => new SelectListItem
           {
               Text = Html.DisplayTextFor(_ => option.RackName).ToString(),
               Value = option.RackID.ToString(),
               Selected = (Model != null) && (option.RackID == Model.RackID) || (Model == null) && (option.RackID == ViewBag.rCID)
           }), "Choose...")
                @Html.ValidationMessageFor(model => model.RackID)
            </td>
        </tr>
        <tr>
            <td class="width30">
                Level
            </td>
            <td class="width70">
                @Html.DropDownListFor(model => model.LevelID, ((IEnumerable<WareHouseMVC.Models.Level>)ViewBag.PossibleLevels).Select(option => new SelectListItem
           {
               Text = Html.DisplayTextFor(_ => option.LevelName).ToString(),
               Value = option.LevelID.ToString(),
               Selected = (Model != null) && (option.LevelID == Model.LevelID) || (Model == null) && (option.LevelID == ViewBag.lVID)
           }), "Choose...")
                @Html.ValidationMessageFor(model => model.LevelID)
            </td>
        </tr>
      <tr>
            <td class="width30">
                Height
            </td>
            <td class="width70">
                @Html.DropDownListFor(model => model.HeightID, ((IEnumerable<WareHouseMVC.Models.Height>)ViewBag.PossibleHeights).Select(option => new SelectListItem
           {
               Text = Html.DisplayTextFor(_ => option.HeightName).ToString(),
               Value = option.HeightID.ToString(),
               Selected = (Model != null) && (option.HeightID == Model.HeightID) || (Model == null) && (option.HeightID == ViewBag.hGID)
           }), "Choose...")
                @Html.ValidationMessageFor(model => model.HeightID)
            </td>
        </tr>
        
        
        
        
        
        


        <tr>
            <td class="width30">
                @Html.LabelFor(model => model.ColumnName)
            </td>
            <td class="width70">
                @Html.EditorFor(model => model.ColumnName)
                @Html.ValidationMessageFor(model => model.ColumnName)
            </td>
        </tr>
        <tr>
            <td class="width30">
                @Html.LabelFor(model => model.ColumnCode)
            </td>
            <td class="width70">
                @Html.EditorFor(model => model.ColumnCode)
                @Html.ValidationMessageFor(model => model.ColumnCode)
            </td>
        </tr>
      
    </tbody>
</table>
