@model WareHouseMVC.Models.BoxDestruction

@* This partial view defines form fields that will appear when creating and editing entities *@


<script type="text/javascript">
    jQuery(function ($) {
        $("select#ClientID").change(function (evt) {

            if ($("select#ClientID").val() != "-1") {

                $.ajax({
                    url:"@Url.Content("~/zones/GetDepts")",
                    type: 'POST',
                    data: { ClientID: $("select#ClientID").val() },
                    success: function (response) {
                        $("select#DepartmentID").replaceWith(response)
                    },
                    error: function (xhr) {
                        alert("Something went wrong, please try again");
                    }
                });
            }
        });


    });

</script>


<table class="table table-bordered table-invoice">
 <tbody>

     <tr>
         <td class="width30">
             Select Client
         </td>
         <td class="width70">
             @Html.DropDownListFor(model => model.ClientID, ((IEnumerable<WareHouseMVC.Models.Client>)ViewBag.PossibleClients).Select(option => new SelectListItem
               {
                   Text = Html.DisplayTextFor(_ => option.ClientName).ToString(),
                   Value = option.ClientID.ToString(),
                   Selected = (Model != null) && (option.ClientID.ToString() == Model.ClientID.ToString())
               }), "Choose...")
             @Html.ValidationMessageFor(model => model.ClientID)
         </td>
     </tr>
     <tr>
         <td class="width30">
             Select Department
         </td>
         <td class="width70">
             @Html.DropDownListFor(model => model.DepartmentID, ((IEnumerable<WareHouseMVC.Models.Department>)ViewBag.PossibleDepartments).Select(option => new SelectListItem
               {
                   Text = Html.DisplayTextFor(_ => option.DepartmentName).ToString(),
                   Value = option.DepartmentID.ToString(),
                   Selected = (Model != null) && (option.DepartmentID.ToString() == Model.DepartmentID.ToString())
               }), "Choose...")
             @Html.ValidationMessageFor(model => model.DepartmentID)
         </td>
     </tr>

     <tr>
         <td class="width30">
             Box Name
         </td>
         <td class="width70">
             @Html.TextBoxFor(model => model.BoxName)
             @Html.ValidationMessageFor(model => model.BoxName)
         </td>
     </tr>
     <tr>
         <td class="width30">
             @Html.LabelFor(model => model.BoxNumner)
         </td>
         <td class="width70">
             @Html.TextBoxFor(model => model.BoxNumner, new { @maxlength = "10" })
             @Html.ValidationMessageFor(model => model.BoxNumner)
         </td>
     </tr>

     <tr>
         <td class="width30">
             @Html.LabelFor(model => model.BoxYear)
         </td>

         <td class="width70">
             @Html.EditorFor(model => model.BoxYear)
             @Html.ValidationMessageFor(model => model.BoxYear)
         </td>
     </tr>


</tbody>
</table>
 
