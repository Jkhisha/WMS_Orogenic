@model WareHouseMVC.Models.BoxSearchViewModel
@{
    ViewBag.Title = "FileSearch";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script type="text/javascript">
    jQuery(function ($) {
        $('.modal2').click(function () {
            $('<div/>').appendTo('body').dialog({
                close: function (event, ui) {
                    dialog.remove();
                },

                show: { effect: 'drop', direction: "up" },
                title: 'Box Location',

                resizable: false,
                height: 500,
                width: 600,
                draggable: true,
                modal: true
            }).load(this.href, {});

            return false;
        });
    });
</script>
<script type="text/javascript">
    jQuery(function ($) {
        $('.modal3').click(function () {
            $('<div/>').appendTo('body').dialog({
                close: function (event, ui) {
                    dialog.remove();
                },

                show: { effect: 'drop', direction: "up" },
                title: 'Box History',

                resizable: false,
                height: 500,
                width: 600,
                draggable: true,
                modal: true
            }).load(this.href, {});

            return false;
        });
    });
</script>
<div class="pagetitle">
    <h1>
        File Search
    </h1>
    <span>Search Files and Update Destruction Period if needed</span>
</div>
@using (Html.BeginForm("FileSearch", "BoxLocations", FormMethod.Post, ""))
{
    @Html.ValidationSummary(true)

    
    <table class="table table-bordered table-invoice">
        <tbody>
            <tr>
                <td class="width30">
                    Client
                </td>
                   <td class="width70">
               
<strong>@ViewBag.ClientName</strong>
<input type="hidden" id="ClientID" name="ClientID" value="@ViewBag.ClientId" />
                </td>
            </tr>
            <tr>
                <td class="width30">
                    Select Department
                </td>
                <td class="width70">
                    @Html.DropDownListFor(model => model.DepartmentID, ((IEnumerable<WareHouseMVC.Models.Department>)ViewBag.PossibleDepartments).Select(option => new SelectListItem
           {
               Text = Html.DisplayTextFor(_ => option.DepartmentName).ToString(),
               Value = option.DepartmentID.ToString(),
               Selected = (Model != null) && (option.DepartmentID == Model.DepartmentID)
           }), "Choose...", new { @data_placeholder = "Choose a Country...", @style = "width: 221px", @class = "chzn-select", @tabindex = "2" })
                    @Html.ValidationMessageFor(model => model.DepartmentID)
                </td>
            </tr>
            <tr>
                <td class="width30">
                    From
                </td>
                <td class="width70">
                    <input id="datepicker" type="text" name="StartDate" />
                </td>
            </tr>
            <tr>
                <td class="width30">
                    To
                </td>
                <td class="width70">
                    <input id="datepicker2" type="text" name="EndDate" />
                </td>
            </tr>
            <tr>
                <td class="width30">
                </td>
                <td class="width70">
                    <input type="submit" value="Search" class="btn btn-primary" />
                </td>
            </tr>
        </tbody>
    </table>
    
    
}
<div id="dyntable_wrapper" class="dataTables_wrapper" role="grid">
    <table class="table table-bordered" id="dyntable">
        <thead>
            <tr>
                <th>
                </th>
                <th>
                    Box No
                </th>
                <th>
                    Box Name
                </th>
                <th>
                    File Number
                </th>
                <th>
                    Referrence No
                </th>
                <th>
                    Ring No
                </th>
                <th>
                    Account No
                </th>
                </th>
                <th>
                    Year
                </th>
                <th>
                    Destruction Period
                </th>
                <th>
                    Assign Date
                </th>
                <th>
                    Transmittal Status
                </th>
                <th>
                    Location
                </th>
                <th>
                    History
                </th>
                <th>
                    Box Status
                </th>
                <th>
                    Last Tr.Out Date
                </th>
            </tr>
        </thead>
        <tbody>
            @if (ViewBag.AllBoxes != null)
            {
                int i = 0;
                foreach (var item in ViewBag.AllBoxes)
                {
                <tr>
                    <td>
                    </td>
                    
                    <td>
                        @item.BoxNo
                    </td>
                    <td>
                        @item.BookNumber
                    </td>
                    <td>
                        @item.FileNumber
                    </td>
                    <td>
                        @item.ReferrenceNo
                    </td>
                    <td>
                        @item.RingNo
                    </td>
                    <td>
                        @item.AccountNo
                    </td>
                    <td>
                        @item.Year
                    </td>
                    <td>
                        @if (item.DestructionPeriod != null)
                        {
                            @item.DestructionPeriod.ToShortDateString()
                        }
                        else
                        {
                            long _clientID = 0;
                            long _deptID = 0;

                            if (Model.ClientID != null)
                            {
                                _clientID = Model.ClientID;
                            }
                            if (Model.DepartmentID.HasValue)
                            {
                                _deptID = Model.DepartmentID.Value;
                            }
            
                            @Html.ActionLink("Update Period", "UpdatePeriod", "BoxLocations", new { ItemId = item.ItemId, clientID = _clientID, deptID = _deptID }, new { @Class = "btn btn-warning btn-rounded" })
                        }
                    </td>
                    <td>
                        @String.Format("{0:g}", item.AssignDate.ToShortDateString())
                    </td>
                    <td>
                        @item.TransmittalINStatus.StatusName
                    </td>
                    <td>
                        @if (item.TransmittalINStatusId >= 5)
                        {
                            @Html.ActionLink("View Location", "ViewLocationModal", "BoxLocations", new { id = item.AssignBoxId }, new { @class = "modal2" })
                        }
                        else
                        {
                            <b>Location not assigned</b>
                        }
                    </td>
                    <td>
                        @Html.ActionLink("View History", "ViewBoxHistory", "BoxLocations", new { id = item.AssignBoxId }, new { @class = "modal3" })
                    </td>
                    <td>
                        @if (item.BoxLocation.Count > 0)
                        {
          
                            @item.BoxLocation[i].CurrentStatus
                        }
                    </td>
                    <td>
                        @if (item.BoxLocation.Count > 0)
                        {

                            if (item.BoxLocation[i].CurrentStatus == "Box Out")
                            {
                                if (item.TrOutDate != null)
                                {
                            @item.TrOutDate;
                                }
                            }
                        }
                    </td>
                </tr>
        
                }
            }
        </tbody>
    </table>
</div>
@{
    if (Model.DepartmentID != null && Model.DepartmentID != -1 && Model.DepartmentID != 0 && Model.ClientID != 0 && Model.ClientID != null && Model.ClientID != -1)
    {
       
    <div class="btn-group">
        <button class="btn btn-warning dropdown-toggle" data-toggle="dropdown">
            Print <span class="caret"></span>
        </button>
        <ul class="dropdown-menu">
            <li>
                @Html.ActionLink("Print on PDF", "PrintBoxListFile", "BoxLocations", new { clientID = Model.ClientID, deptID = Model.DepartmentID, startDate = Model.StartDate, endDate = Model.EndDate, reportType = 1 }, new { @target = "_blank" })
            </li>
            <li>
                @Html.ActionLink("Print on Excel", "PrintBoxListFile", "BoxLocations", new { clientID = Model.ClientID, deptID = Model.DepartmentID, startDate = Model.StartDate, endDate = Model.EndDate, reportType = 2 }, new { @target = "_blank" })
            </li>
        </ul>
    </div>
    
    
    }
}
